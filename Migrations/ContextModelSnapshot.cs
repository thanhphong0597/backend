// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using clothes_backend.Service;

#nullable disable

namespace clothesbackend.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("clothes_backend.Entities.Cart.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("number")
                        .HasColumnType("float");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("size")
                        .HasColumnType("float");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Attri", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("number")
                        .HasColumnType("float");

                    b.Property<double>("size")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("attries");

                    b.HasData(
                        new
                        {
                            id = 1,
                            color = "red",
                            number = 2.0,
                            size = 38.0
                        },
                        new
                        {
                            id = 2,
                            color = "green",
                            number = 3.0,
                            size = 40.0
                        },
                        new
                        {
                            id = 3,
                            color = "red",
                            number = 1.0,
                            size = 39.0
                        },
                        new
                        {
                            id = 4,
                            color = "red",
                            number = 2.0,
                            size = 41.0
                        },
                        new
                        {
                            id = 5,
                            color = "yellow",
                            number = 2.0,
                            size = 0.0
                        });
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Men's Clothing"
                        },
                        new
                        {
                            id = 2,
                            name = "Women's Clothing"
                        },
                        new
                        {
                            id = 3,
                            name = "Jewelery"
                        });
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("categoryID")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<double>("rate")
                        .HasColumnType("float");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("categoryID");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            categoryID = 1,
                            count = 0,
                            name = "Mens Casual Premium Slim Fit T - Shirts",
                            price = 33.399999999999999,
                            rate = 0.0,
                            title = "Men"
                        },
                        new
                        {
                            id = 2,
                            categoryID = 1,
                            count = 0,
                            name = "Mens Cotton Jacket ",
                            price = 12.4,
                            rate = 0.0,
                            title = "Men"
                        },
                        new
                        {
                            id = 3,
                            categoryID = 2,
                            count = 0,
                            name = "Ao nu 1",
                            price = 33.399999999999999,
                            rate = 0.0,
                            title = "Women"
                        },
                        new
                        {
                            id = 4,
                            categoryID = 3,
                            count = 0,
                            name = "Vong Vang nay no a",
                            price = 33.399999999999999,
                            rate = 0.0,
                            title = "Jewelery"
                        });
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Stock", b =>
                {
                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.Property<int>("attriID")
                        .HasColumnType("int");

                    b.HasKey("productID", "attriID");

                    b.HasIndex("attriID");

                    b.ToTable("Stock", (string)null);

                    b.HasData(
                        new
                        {
                            productID = 1,
                            attriID = 1
                        },
                        new
                        {
                            productID = 1,
                            attriID = 2
                        },
                        new
                        {
                            productID = 2,
                            attriID = 3
                        },
                        new
                        {
                            productID = 3,
                            attriID = 4
                        },
                        new
                        {
                            productID = 4,
                            attriID = 5
                        });
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Product", b =>
                {
                    b.HasOne("clothes_backend.Entities.Dal.Category", "category")
                        .WithMany("products")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Stock", b =>
                {
                    b.HasOne("clothes_backend.Entities.Dal.Attri", "attri")
                        .WithMany("stocks")
                        .HasForeignKey("attriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clothes_backend.Entities.Dal.Product", "product")
                        .WithMany("stocks")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("attri");

                    b.Navigation("product");
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Attri", b =>
                {
                    b.Navigation("stocks");
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("clothes_backend.Entities.Dal.Product", b =>
                {
                    b.Navigation("stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
